name: AssettoServer GameServer - Build and Push

permissions:
    contents: read
    packages: write

on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to deploy to"
                required: true
                default: "staging"
                type: choice
                options:
                    - dev
                    - staging
                    - prod
    push:
        tags:
            - "v*"

jobs:
    changes:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: read
        outputs:
            game_server: ${{ steps.filter.outputs.game_server }}
        steps:
            - uses: actions/checkout@v4
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      game_server:
                          - '**'
                          - '.github/workflows/docker.yaml'

    build:
        needs: changes
        if: |
            github.event_name == 'workflow_dispatch' ||
            contains(github.ref, 'refs/tags/') ||
            needs.changes.outputs.game_server == 'true'
        name: Build Docker Image
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        environment: ${{ github.event.inputs.environment || (github.base_ref == 'master' && 'prod') || 'staging' }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Check modified files
              id: check-files
              run: |
                  ./ci-scripts/check-modified-files.sh \
                    "**" \
                    ".github/workflows/docker.yaml"

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.PACKAGES_TOKEN }}

            - name: Set environment
              id: env
              run: |
                  if [[ $GITHUB_REF == refs/tags/* ]]; then
                    if git merge-base --is-ancestor HEAD origin/master; then
                      echo "env=prod" >> $GITHUB_OUTPUT
                    else
                      echo "env=staging" >> $GITHUB_OUTPUT
                    fi
                  else
                    echo "env=${{ github.event.inputs.environment || 'staging' }}" >> $GITHUB_OUTPUT
                  fi

            - name: Set version
              id: version
              run: |
                  if [[ $GITHUB_REF == refs/tags/* ]]; then
                    VERSION=${GITHUB_REF#refs/tags/}
                  else
                    VERSION="latest"
                  fi
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: Debug environment detection and version
              run: |
                  echo "GITHUB_REF: $GITHUB_REF"
                  echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
                  echo "Is on master? $(git merge-base --is-ancestor HEAD origin/master && echo 'yes' || echo 'no')"
                  echo "Selected environment: ${{ steps.env.outputs.env }}"
                  echo "Version: ${{ steps.version.outputs.version }}"

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ghcr.io/${{ github.repository }}/assetto_corsa-server.${{ steps.env.outputs.env }}
                  tags: |
                      type=raw,value={{tag}}
                      type=sha,format=long
                  labels: |
                      org.opencontainers.image.title=AssettoServer GameServer
                      org.opencontainers.image.description=Main Assetto Corsa server process
                      maintainer=CorsaClub

            - name: Build and Push
              env:
                  GITHUB_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
              run: |
                  ./ci-scripts/docker-package-push.sh \
                    "." \
                    "./docker/Dockerfile" \
                    "assetto_corsa-server" \
                    "${{ steps.env.outputs.env }}" \
                    "${{ steps.version.outputs.version }}" \
                    "STEAM_USERNAME=${{ secrets.STEAM_USERNAME }}" \
                    "STEAM_PASSWORD=${{ secrets.STEAM_PASSWORD }}"

                  ./ci-scripts/cleanup-versions.sh "docker" "assetto_corsa-server" "${{ steps.env.outputs.env }}" 2

