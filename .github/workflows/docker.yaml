name: AssettoServer [ GameServer ] - Build and Push

# This workflow builds and pushes the main game server container image
# The game server container runs the actual Assetto Corsa server process
#
# Triggers:
# - Manual dispatch with environment selection
# - Push to master/staging/dev branches
# - New version tags
#
# Environments:
# - prod: For production deployment
# - staging: For staging/testing
# - dev: For development

on:
    workflow_dispatch:
        inputs:
            environment:
                description: "Environment to deploy to"
                required: true
                default: "staging"
                type: choice
                options:
                    - prod
                    - staging
                    - dev
    push:
        branches:
            - master
            - staging
        tags:
            - "v*"

jobs:
    build:
        name: Build Docker Image
        runs-on: ubuntu-latest
        environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/master' && 'prod') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Set image tag suffix
              id: tag_suffix
              run: |
                  ENV="${{ github.event.inputs.environment || (github.ref == 'refs/heads/master' && 'prod') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}"
                  if [ "$ENV" = "prod" ]; then
                    echo "suffix=-prod" >> $GITHUB_OUTPUT
                  elif [ "$ENV" = "staging" ]; then
                    echo "suffix=-staging" >> $GITHUB_OUTPUT
                  else
                    echo "suffix=-dev" >> $GITHUB_OUTPUT
                  fi

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: |
                      ewr.vultrcr.com/corsaclub/docker/assetto_corsa-server
                  tags: |
                      type=semver,pattern={{version}}${{ steps.tag_suffix.outputs.suffix }}
                      type=sha,format=long,suffix=${{ steps.tag_suffix.outputs.suffix }}
                  labels: |
                      org.opencontainers.image.title=AssettoServer GameServer
                      org.opencontainers.image.description=Assetto Corsa server
                      maintainer=CorsaClub

            - name: Login to Vultr Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ewr.vultrcr.com
                  username: ${{ secrets.VULTR_REGISTRY_USERNAME }}
                  password: ${{ secrets.VULTR_REGISTRY_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./docker/Dockerfile
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

